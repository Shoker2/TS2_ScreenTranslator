# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:/Users/Shoker2/Desktop/ScreeenTranslator/ui/Settings.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_Settings(object):
	langs_translate = {
		'Afrikaans':'af',
		'Arabic':'ar',
		'Assamese':'as',
		'Azerbaijani':'az',
		'Belarusian':'be',
		'Bulgarian':'bg',
		'Bengali':'bn',
		'Bosnian':'bs',
		'Chinese (simplified)':'zh-CN',
		'Chinese (traditional)':'zh-TW',
		'Czech':'cs',
		'Welsh':'cy',
		'Danish':'da',
		'German':'de',
		'English':'en',
		'Spanish':'es',
		'Estonian':'et',
		'Persian':'fa',
		'French':'fr',
		'Irish':'ga',
		'Hindi':'hi',
		'Croatian':'hr',
		'Hungarian':'hu',
		'Indonesian':'id',
		'Icelandic':'is',
		'Italian':'it',
		'Japanese':'ja',
		'Kannada':'kn',
		'Korean':'ko',
		'Latin':'la',
		'Lithuanian':'lt',
		'Latvian':'lv',
		'Maori':'mi',
		'Mongolian':'mn',
		'Marathi':'mr',
		'Malay':'ms',
		'Maltese':'mt',
		'Nepali':'ne',
		'Dutch':'nl',
		'Norwegian':'no',
		'Polish':'pl',
		'Portuguese':'pt',
		'Romanian':'ro',
		'Russian':'ru',
		'Serbian':'sr',
		'Slovak':'sk',
		'Slovenian':'sl',
		'Albanian':'sq',
		'Swedish':'sv',
		'Swahili':'sw',
		'Tamil':'ta',
		'Telugu':'te',
		'Thai':'th',
		'Tajik':'tg',
		'Turkish':'tr',
		'Uyghur':'ug',
		'Urdu':'ur',
		'Uzbek':'uz',
		'Vietnamese':'vi'
		}

	langs_easyocr = {
		'Afrikaans':'af',
		'Arabic':'ar',
		'Assamese':'as',
		'Azerbaijani':'az',
		'Belarusian':'be',
		'Bulgarian':'bg',
		'Bengali':'bn',
		'Bosnian':'bs',
		'Chinese (simplified)':'ch_sim',
		'Chinese (traditional)':'ch_tra',
		'Czech':'cs',
		'Welsh':'cy',
		'Danish':'da',
		'German':'de',
		'English':'en',
		'Spanish':'es',
		'Estonian':'et',
		'Persian':'fa',
		'French':'fr',
		'Irish':'ga',
		'Hindi':'hi',
		'Croatian':'hr',
		'Hungarian':'hu',
		'Indonesian':'id',
		'Icelandic':'is',
		'Italian':'it',
		'Japanese':'ja',
		'Kannada':'kn',
		'Korean':'ko',
		'Latin':'la',
		'Lithuanian':'lt',
		'Latvian':'lv',
		'Maori':'mi',
		'Mongolian':'mn',
		'Marathi':'mr',
		'Malay':'ms',
		'Maltese':'mt',
		'Nepali':'ne',
		'Dutch':'nl',
		'Norwegian':'no',
		'Polish':'pl',
		'Portuguese':'pt',
		'Romanian':'ro',
		'Russian':'ru',
		'Serbian':'rs_cyrillic',
		'Slovak':'sk',
		'Slovenian':'sl',
		'Albanian':'sq',
		'Swedish':'sv',
		'Swahili':'sw',
		'Tamil':'ta',
		'Telugu':'te',
		'Thai':'th',
		'Tajik':'tjk',
		'Turkish':'tr',
		'Uyghur':'ug',
		'Urdu':'ur',
		'Uzbek':'uz',
		'Vietnamese':'vi'
		}

	langs_tesseract = {
		'Afrikaans':'afr',
		'Arabic':'amh',
		'Assamese':'asm',
		'Azerbaijani':'aze',
		'Belarusian':'bel',
		'Bulgarian':'bul',
		'Bengali':'ben',
		'Bosnian':'bos',
		'Chinese (simplified)':'chi_sim',
		'Chinese (traditional)':'chi_tra',
		'Czech':'ces',
		'Welsh':'cym',
		'Danish':'dan',
		'German':'deu',
		'English':'eng',
		'Spanish':'spa',
		'Estonian':'est',
		'Persian':'fas',
		'French':'fra',
		'Irish':'gle',
		'Hindi':'hin',
		'Croatian':'hrv',
		'Hungarian':'hun',
		'Indonesian':'ind',
		'Icelandic':'isl',
		'Italian':'ita',
		'Japanese':'jpn',
		'Kannada':'kan',
		'Korean':'kor',
		'Latin':'lat',
		'Lithuanian':'lit',
		'Latvian':'lav',
		'Maori':'mri',
		'Mongolian':'mon',
		'Marathi':'mar',
		'Malay':'msa',
		'Maltese':'mlt',
		'Nepali':'nep',
		'Dutch':'nld',
		'Norwegian':'nor',
		'Polish':'pol',
		'Portuguese':'por',
		'Romanian':'ron',
		'Russian':'rus',
		'Serbian':'srp',
		'Slovak':'slk',
		'Slovenian':'slv',
		'Albanian':'sqi',
		'Swedish':'swe',
		'Swahili':'swa',
		'Tamil':'tam',
		'Telugu':'tel',
		'Thai':'tha',
		'Tajik':'tgk',
		'Turkish':'tur',
		'Uyghur':'uig',
		'Urdu':'urd',
		'Uzbek':'uzb',
		'Vietnamese':'vie'
		}

	recognitors = ['easyocr', 'tesseract']

	def setupUi(self, Settings, icon_path=''):
		if icon_path != '':
			Settings.setWindowIcon(QtGui.QIcon(icon_path))
		
		Settings.setWindowFlags(QtCore.Qt.FramelessWindowHint| QtCore.Qt.WindowStaysOnTopHint) # Делаю окно без границ и кнопок (свернуть и т.д.). А также делаю поверх всех окно

		Settings.setObjectName("Settings")
		Settings.resize(380, 118)
		Settings.setMinimumSize(QtCore.QSize(0, 0))
		Settings.setMaximumSize(QtCore.QSize(99999, 99999))
		self.centralwidget = QtWidgets.QWidget(Settings)
		self.centralwidget.setObjectName("centralwidget")
		self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
		self.tabWidget.setGeometry(QtCore.QRect(0, 0, Settings.size().width(), Settings.size().height()))
		self.tabWidget.setTabBarAutoHide(False)
		self.tabWidget.setObjectName("tabWidget")
		self.general_page = QtWidgets.QWidget()
		self.general_page.setObjectName("general_page")
		self.scrollArea_General = QtWidgets.QScrollArea(self.general_page)
		self.scrollArea_General.setGeometry(QtCore.QRect(0, 0, Settings.size().width() - 5, Settings.size().height() - 24))
		self.scrollArea_General.setWidgetResizable(True)
		self.scrollArea_General.setObjectName("scrollArea_General")
		self.scrollAreaWidgetContents_2 = QtWidgets.QWidget()
		self.scrollAreaWidgetContents_2.setGeometry(QtCore.QRect(0, 0, 352, 180))
		self.scrollAreaWidgetContents_2.setObjectName("scrollAreaWidgetContents_2")
		self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents_2)
		self.verticalLayout_2.setObjectName("verticalLayout_2")
		self.horizontalLayout = QtWidgets.QHBoxLayout()
		self.horizontalLayout.setContentsMargins(0, -1, -1, -1)
		self.horizontalLayout.setObjectName("horizontalLayout")
		self.Font_label_2 = QtWidgets.QLabel(self.scrollAreaWidgetContents_2)
		font = QtGui.QFont()
		font.setPointSize(10)
		self.Font_label_2.setFont(font)
		self.Font_label_2.setObjectName("Font_label_2")
		self.horizontalLayout.addWidget(self.Font_label_2)
		self.fromComboBox = QtWidgets.QComboBox(self.scrollAreaWidgetContents_2)
		self.fromComboBox.setObjectName("fromComboBox")
		self.horizontalLayout.addWidget(self.fromComboBox)
		self.verticalLayout_2.addLayout(self.horizontalLayout)
		self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
		self.horizontalLayout_2.setContentsMargins(0, -1, -1, -1)
		self.horizontalLayout_2.setObjectName("horizontalLayout_2")
		self.Font_label_3 = QtWidgets.QLabel(self.scrollAreaWidgetContents_2)
		font = QtGui.QFont()
		font.setPointSize(10)
		self.Font_label_3.setFont(font)
		self.Font_label_3.setObjectName("Font_label_3")
		self.horizontalLayout_2.addWidget(self.Font_label_3)
		self.toComboBox = QtWidgets.QComboBox(self.scrollAreaWidgetContents_2)
		self.toComboBox.setObjectName("toComboBox")
		self.horizontalLayout_2.addWidget(self.toComboBox)
		self.verticalLayout_2.addLayout(self.horizontalLayout_2)
		self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
		self.horizontalLayout_4.setContentsMargins(0, -1, -1, -1)
		self.horizontalLayout_4.setObjectName("horizontalLayout_4")
		self.Font_label_4 = QtWidgets.QLabel(self.scrollAreaWidgetContents_2)
		font = QtGui.QFont()
		font.setPointSize(10)
		self.Font_label_4.setFont(font)
		self.Font_label_4.setObjectName("Font_label_4")
		self.horizontalLayout_4.addWidget(self.Font_label_4)
		self.translatorComboBox = QtWidgets.QComboBox(self.scrollAreaWidgetContents_2)
		font = QtGui.QFont()
		font.setPointSize(9)
		self.translatorComboBox.setFont(font)
		self.translatorComboBox.setObjectName("translatorComboBox")
		self.horizontalLayout_4.addWidget(self.translatorComboBox)
		self.verticalLayout_2.addLayout(self.horizontalLayout_4)
		self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
		self.horizontalLayout_6.setContentsMargins(0, -1, -1, -1)
		self.horizontalLayout_6.setObjectName("horizontalLayout_6")
		self.Font_label_8 = QtWidgets.QLabel(self.scrollAreaWidgetContents_2)
		font = QtGui.QFont()
		font.setPointSize(10)
		self.Font_label_8.setFont(font)
		self.Font_label_8.setObjectName("Font_label_8")
		self.horizontalLayout_6.addWidget(self.Font_label_8)
		self.recognizerComboBox = QtWidgets.QComboBox(self.scrollAreaWidgetContents_2)
		font = QtGui.QFont()
		font.setPointSize(9)
		self.recognizerComboBox.setFont(font)
		self.recognizerComboBox.setObjectName("recognizerComboBox")
		self.horizontalLayout_6.addWidget(self.recognizerComboBox)
		self.verticalLayout_2.addLayout(self.horizontalLayout_6)
		self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
		self.horizontalLayout_5.setContentsMargins(0, -1, -1, -1)
		self.horizontalLayout_5.setObjectName("horizontalLayout_5")
		spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
		self.horizontalLayout_5.addItem(spacerItem)
		self.pushButton = QtWidgets.QPushButton(self.scrollAreaWidgetContents_2)
		self.pushButton.setObjectName("pushButton")
		self.horizontalLayout_5.addWidget(self.pushButton)
		self.verticalLayout_2.addLayout(self.horizontalLayout_5)
		self.scrollArea_General.setWidget(self.scrollAreaWidgetContents_2)
		self.tabWidget.addTab(self.general_page, "")
		self.tab = QtWidgets.QWidget()
		self.tab.setObjectName("tab")
		self.fontComboBox = QtWidgets.QFontComboBox(self.tab)
		self.fontComboBox.setGeometry(QtCore.QRect(10, 30, 241, 22))
		self.fontComboBox.setObjectName("fontComboBox")
		self.Font_label = QtWidgets.QLabel(self.tab)
		self.Font_label.setGeometry(QtCore.QRect(10, 6, 221, 21))
		font = QtGui.QFont()
		font.setPointSize(10)
		self.Font_label.setFont(font)
		self.Font_label.setObjectName("Font_label")
		self.fontSpinBox = QtWidgets.QSpinBox(self.tab)
		self.fontSpinBox.setGeometry(QtCore.QRect(260, 30, 42, 22))
		self.fontSpinBox.setObjectName("fontSpinBox")
		self.tabWidget.addTab(self.tab, "")
		self.shortcuts_page = QtWidgets.QWidget()
		self.shortcuts_page.setObjectName("shortcuts_page")
		self.Font_label_5 = QtWidgets.QLabel(self.shortcuts_page)
		self.Font_label_5.setGeometry(QtCore.QRect(10, 10, 101, 31))
		font = QtGui.QFont()
		font.setPointSize(10)
		self.Font_label_5.setFont(font)
		self.Font_label_5.setObjectName("Font_label_5")
		self.Font_label_6 = QtWidgets.QLabel(self.shortcuts_page)
		self.Font_label_6.setGeometry(QtCore.QRect(10, 50, 101, 31))
		font = QtGui.QFont()
		font.setPointSize(10)
		self.Font_label_6.setFont(font)
		self.Font_label_6.setObjectName("Font_label_6")
		self.selecetAreaKeySequenceEdit = QtWidgets.QKeySequenceEdit(self.shortcuts_page)
		self.selecetAreaKeySequenceEdit.setGeometry(QtCore.QRect(120, 10, 121, 31))
		font = QtGui.QFont()
		font.setPointSize(10)
		self.selecetAreaKeySequenceEdit.setFont(font)
		self.selecetAreaKeySequenceEdit.setObjectName("selecetAreaKeySequenceEdit")
		self.repeatAreaKeySequenceEdit = QtWidgets.QKeySequenceEdit(self.shortcuts_page)
		self.repeatAreaKeySequenceEdit.setGeometry(QtCore.QRect(120, 50, 121, 31))
		font = QtGui.QFont()
		font.setPointSize(10)
		self.repeatAreaKeySequenceEdit.setFont(font)
		self.repeatAreaKeySequenceEdit.setObjectName("repeatAreaKeySequenceEdit")
		self.tabWidget.addTab(self.shortcuts_page, "")
		self.Output_page = QtWidgets.QWidget()
		self.Output_page.setObjectName("Output_page")
		self.scrollArea = QtWidgets.QScrollArea(self.Output_page)
		self.scrollArea.setGeometry(QtCore.QRect(0, 0, 375, 91))
		self.scrollArea.setWidgetResizable(True)
		self.scrollArea.setObjectName("scrollArea")
		self.scrollAreaWidgetContents = QtWidgets.QWidget()
		self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 352, 204))
		self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
		self.verticalLayout = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents)
		self.verticalLayout.setObjectName("verticalLayout")
		self.windowOutput = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
		font = QtGui.QFont()
		font.setPointSize(10)
		self.windowOutput.setFont(font)
		self.windowOutput.setChecked(True)
		self.windowOutput.setObjectName("windowOutput")
		self.verticalLayout.addWidget(self.windowOutput)
		self.consoleOutput = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
		font = QtGui.QFont()
		font.setPointSize(10)
		self.consoleOutput.setFont(font)
		self.consoleOutput.setObjectName("consoleOutput")
		self.verticalLayout.addWidget(self.consoleOutput)
		self.clipboardOutput = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
		font = QtGui.QFont()
		font.setPointSize(10)
		self.clipboardOutput.setFont(font)
		self.clipboardOutput.setObjectName("clipboardOutput")
		self.verticalLayout.addWidget(self.clipboardOutput)
		self.originalOutput = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
		font = QtGui.QFont()
		font.setPointSize(10)
		self.originalOutput.setFont(font)
		self.originalOutput.setChecked(False)
		self.originalOutput.setObjectName("originalOutput")
		self.verticalLayout.addWidget(self.originalOutput)
		self.TS2ST_serverOutput = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
		font = QtGui.QFont()
		font.setPointSize(10)
		self.TS2ST_serverOutput.setFont(font)
		self.TS2ST_serverOutput.setChecked(False)
		self.TS2ST_serverOutput.setObjectName("TS2ST_serverOutput")
		self.verticalLayout.addWidget(self.TS2ST_serverOutput)
		self.TS2ST_serverLineEdit = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
		self.TS2ST_serverLineEdit.setObjectName("TS2ST_serverLineEdit")
		self.verticalLayout.addWidget(self.TS2ST_serverLineEdit)
		self.scrollArea.setWidget(self.scrollAreaWidgetContents)
		self.tabWidget.addTab(self.Output_page, "")
		self.change_list_page = QtWidgets.QWidget()
		self.change_list_page.setObjectName("change_list_page")
		self.tableWidget = QtWidgets.QTableWidget(self.change_list_page)
		self.tableWidget.setGeometry(QtCore.QRect(0, 0, 365, 91))
		self.tableWidget.setObjectName("tableWidget")
		self.tableWidget.setColumnCount(2)
		self.tableWidget.setRowCount(1)
		item = QtWidgets.QTableWidgetItem()
		self.tableWidget.setVerticalHeaderItem(0, item)
		item = QtWidgets.QTableWidgetItem()
		item.setText("Before")
		self.tableWidget.setHorizontalHeaderItem(0, item)
		item = QtWidgets.QTableWidgetItem()
		self.tableWidget.setHorizontalHeaderItem(1, item)
		self.tabWidget.addTab(self.change_list_page, "")
		Settings.setCentralWidget(self.centralwidget)

		self.pushButton.clicked.connect(lambda: self.apply(Settings))
		self.tableWidget.cellChanged.connect(lambda: self.table_changed())

		cell_width = int((Settings.size().width() - 60)/2)
		self.tableWidget.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
		self.tableWidget.setColumnWidth(0, cell_width)
		self.tableWidget.setColumnWidth(1, cell_width)

		self.retranslateUi(Settings)
		self.tabWidget.setCurrentIndex(0)
		QtCore.QMetaObject.connectSlotsByName(Settings)

		self.set_comboboxs()

	def retranslateUi(self, Settings):
		Settings.setWindowTitle("TS2_Settings")
		self.Font_label_2.setText("From")
		self.Font_label_3.setText("To")
		self.Font_label_4.setText("Translator")
		self.Font_label_8.setText("Recognizer")
		self.pushButton.setText("Apply")
		self.tabWidget.setTabText(self.tabWidget.indexOf(self.general_page), "General")
		self.Font_label.setText("Font")
		self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), "Font")
		self.Font_label_5.setText("Select Area")
		self.Font_label_6.setText("Repeat Area")
		self.tabWidget.setTabText(self.tabWidget.indexOf(self.shortcuts_page), "Shortcuts")
		item = self.tableWidget.horizontalHeaderItem(1)
		item.setText("Changed")
		self.tabWidget.setTabText(self.tabWidget.indexOf(self.change_list_page), "Correction")
		self.windowOutput.setText("Output to the window")
		self.consoleOutput.setText("Output to the console")
		self.clipboardOutput.setText("Output to the clipboard")
		self.originalOutput.setText("Output original to console")
		self.tabWidget.setTabText(self.tabWidget.indexOf(self.Output_page), ("Output"))
		self.TS2ST_serverOutput.setText("Output to the TS2ST_Server")
	
	def table_check_row_for_emptiness(self, row):
		first = False
		second = False

		if self.tableWidget.item(row, 0) == None or self.tableWidget.item(row, 0).text() == '': # Если первый столбец пустой то first = true
			first = True
		if self.tableWidget.item(row, 1) == None or self.tableWidget.item(row, 1).text() == '': # Если второй столбец пустой то second = true
			second = True
			
		if first and second: # Если оба столбца пустыне, то возвращяю True
			return True
		else:	# иначе False
			return False

	def table_changed(self):
		row_count = self.tableWidget.rowCount()

		if self.table_check_row_for_emptiness(row_count-1):
			if self.table_check_row_for_emptiness(row_count-2):
				self.tableWidget.removeRow(row_count-1)
		else:
			self.tableWidget.setRowCount(row_count+1)
	
	def set_table_from_dictionary(self, dic: dict):
		row_count = len(dic)

		if row_count > 0:
			self.tableWidget.setRowCount(row_count)
			
			row = 0
			for i in dic.keys():
				item = QtWidgets.QTableWidgetItem()
				item.setText(str(i))
				self.tableWidget.setItem(row, 0, item)

				item = QtWidgets.QTableWidgetItem()
				item.setText(str(dic[i]))
				self.tableWidget.setItem(row, 1, item)

				row += 1
		else:
			self.tableWidget.setRowCount(1)

	def get_all(self):
		get = {}
		get['correction'] = {}

		sequence = self.selecetAreaKeySequenceEdit.keySequence()	# Получаю комбинацию клавишь
		keys = str(sequence.toString(QtGui.QKeySequence.NativeText))	# Перевожу комбинацию клавишь в текстовый формат

		get['selecet_area'] = self.key_parser(keys)

		sequence = self.repeatAreaKeySequenceEdit.keySequence()
		keys = str(sequence.toString(QtGui.QKeySequence.NativeText))

		get['repeat_area'] = self.key_parser(keys)

		get['from'] = self.fromComboBox.currentText()
		get['to'] = self.toComboBox.currentText()
		get['translator'] = self.translatorComboBox.currentText()
		get['recognitor'] = self.recognizerComboBox.currentText()
		get['font'] = self.fontComboBox.currentText()
		get['font_size'] = self.fontSpinBox.value()

		get['Output_window'] = str(int(self.windowOutput.isChecked()))
		get['Output_console'] = str(int(self.consoleOutput.isChecked()))
		get['Output_clipboard'] = str(int(self.clipboardOutput.isChecked()))
		get['Output_original'] = str(int(self.originalOutput.isChecked()))
		get['Output_TS2ST_server'] = str(int(self.TS2ST_serverOutput.isChecked()))
		get['Output_TS2ST_server_IP'] = str(self.TS2ST_serverLineEdit.text())

		row_count = self.tableWidget.rowCount()
		if self.table_check_row_for_emptiness(row_count-1):
			self.tableWidget.removeRow(row_count-1)
	
		for row in range(self.tableWidget.rowCount()):
			Source = self.tableWidget.item(row, 0)
			Changed = self.tableWidget.item(row, 1)

			if Source == None:
				Source = ''
			else:
				Source = Source.text()
			
			if Changed == None:
				Changed = ''
			else:
				Changed = Changed.text()

			get['correction'][Source] = Changed

		return get
	
	def key_parser(self, str_keys): # Превращяет комбинацию клавишь из одного формата в другой
		keys = list(str_keys.split(','))

		simple_keys = [] # Простые кнопки (A, B, J)
		hard_keys = [] # Сложные кнопки (Shift, Alt, Ctrl)
		for i in keys:
			for j in list(i.split('+')):
				if len(j.strip()) > 1:	# Если клавиша состоит более чем из одной буквы, то она уходит в hard_keys
					hard_keys.append(j.strip())
				else:	# Иначе в simple_keys
					simple_keys.append(j.strip())

		parsed = []
		check_simple_keys = 0
		for key in hard_keys:	# Добавляю клавши из hard_keys в parsed без повторов
			if key not in parsed:
				parsed.append(key)	
		
		for key in simple_keys:
			if key not in parsed:	# Добавляю клавши из simple_keys в parsed без повторов
				parsed.append(key)
				check_simple_keys += 1 # Веду счётчик простых клавишей

		if check_simple_keys == 1:	# Если простая клавиша только одна, то возвращяет всю комбинацию клавишь
			return '+'.join(parsed)
		else:
			return None
	
	def set_comboboxs(self):
		for lang in self.langs_easyocr.keys():
			self.toComboBox.addItem(lang)
			self.fromComboBox.addItem(lang)
		
		for recognizer in self.recognitors:
			self.recognizerComboBox.addItem(recognizer)

	def apply(self, Settings):
		Settings.hide()

if __name__ == "__main__":
	import sys
	app = QtWidgets.QApplication(sys.argv)

	Settings = QtWidgets.QMainWindow()
	ui = Ui_Settings()
	ui.setupUi(Settings)
	Settings.show()
	
	sys.exit(app.exec_())
